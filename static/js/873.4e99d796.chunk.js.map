{"version":3,"file":"static/js/873.4e99d796.chunk.js","mappings":"8LACA,G,QAA0B,0BAA1B,EAAiE,6BAAjE,EAA6G,8BAA7G,EAAsJ,0B,UCAtJ,EAAyB,uB,SCYzB,EATe,SAACA,GACd,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCPhC,KCUA,EARgB,SAACN,GACf,OACE,gBAAKG,UAAWC,EAAAA,QAAhB,SACOJ,EAAMO,W,uCCEbC,GAAcC,EAAAA,EAAAA,GAAU,IAatBC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EAXL,SAACX,GACnB,OACE,kBAAMa,SAAUb,EAAMc,aAAtB,WACE,SAACC,EAAA,EAAD,CAAOT,KAAM,cAAeU,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,MACtE,0BACE,6CAsCR,EA7BgB,SAACR,GAEf,IAAIoB,EAAgBpB,EAAMqB,YAAYC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAQjB,KAAMiB,EAAOjB,KAAMJ,GAAIqB,EAAOrB,IAASqB,EAAOrB,OAEtGsB,EAAiBxB,EAAMyB,aAAaH,KAAI,SAAAf,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQL,OAOvG,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGgB,KAEH,gBAAKjB,UAAWC,EAAhB,SACGoB,KAEH,0BACE,gBAAKrB,UAAWC,EAAhB,UACE,SAACM,EAAD,CAAkBG,SAfF,SAACa,GACvBC,QAAQC,IAAIF,GACZ1B,EAAM6B,YAAYH,EAAMG,wBCV5B,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAjBoB,SAACC,GACrB,MAAO,CACLX,YAAaW,EAAMC,YAAYZ,YAC/BI,aAAcO,EAAMC,YAAYR,aAChCS,eAAgBF,EAAMC,YAAYC,mBAIb,SAACC,GACxB,MAAO,CACLN,YAAa,SAACO,GACZD,GAASE,EAAAA,EAAAA,GAAwBD,SAOrCE,EAAAA,EAFF,CAGEC,I,iJCrBEC,EAAkB,SAACR,GAAD,MAAY,CAChCS,OAAQT,EAAMU,KAAKD,SAGRH,EAAe,SAACK,GAAe,IAEpCC,EAFmC,0IAGvC,WACE,OAAKC,KAAK7C,MAAMyC,QACT,SAACE,GAAD,UAAeE,KAAK7C,SADI,SAAC,KAAD,CAAUK,GAAG,eAJP,GAELyC,EAAAA,WASpC,OAFuBf,EAAAA,EAAAA,IAAQS,EAART,CAAyBa","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hocs/hocRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__6Ftgg\",\"dialogItems\":\"Dialogs_dialogItems__c68eZ\",\"messageItems\":\"Dialogs_messageItems__xA94V\",\"textSend\":\"Dialogs_textSend__p9ncq\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__eDQ-u\"};","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport classes from './Dialog.module.css'\r\n\r\nconst Dialog = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\"\r\nimport classes from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.message}>\r\n          {props.message} \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport classes from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\"\r\nimport Message from \"./Message/Message\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\"\r\nimport { maxLength, required } from \"../../utils/validators\"\r\n\r\nlet maxLength50 = maxLength(50)\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name={'sendMessage'} component={Textarea} validate={[required, maxLength50]} />\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: 'message' })(MessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogElement = props.dialogsData.map(dialog => <Dialog name={dialog.name} id={dialog.id} key={dialog.id} />)\r\n\r\n  let messageElement = props.messagesData.map(message => <Message message={message.message} key={message.id} />)\r\n\r\n  const onSubmitMessage = (value) => {\r\n    console.log(value)\r\n    props.sendMessage(value.sendMessage)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogItems}>\r\n        {dialogElement}\r\n      </div>\r\n      <div className={classes.messageItems}>\r\n        {messageElement}\r\n      </div>\r\n      <div>\r\n        <div className={classes.textSend}>\r\n          <MessageReduxForm onSubmit={onSubmitMessage} />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import { connect } from \"react-redux\"\r\nimport { compose } from \"redux\"\r\nimport { WithRedirect } from \"../../hocs/hocRedirect\"\r\nimport { sendMessagActionCreator } from \"../../redux/dialogsReducer\"\r\nimport Dialogs from \"./Dialogs\"\r\n\r\nlet mapStateToProps = (state) => {\r\n  return { \r\n    dialogsData: state.dialogsPage.dialogsData,\r\n    messagesData: state.dialogsPage.messagesData,\r\n    newMessageText: state.dialogsPage.newMessageText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (massage) => {\r\n      dispatch(sendMessagActionCreator(massage))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  WithRedirect\r\n)(Dialogs)","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const WithRedirect = (Component) => {\r\n\r\n  class withRedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let withAuthRedirect = connect(mapStateToProps)(withRedirectComponent)\r\n\r\n  return withAuthRedirect\r\n}"],"names":["props","path","id","className","classes","to","name","message","maxLength50","maxLength","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","dialogElement","dialogsData","map","dialog","messageElement","messagesData","value","console","log","sendMessage","compose","connect","state","dialogsPage","newMessageText","dispatch","massage","sendMessagActionCreator","WithRedirect","Dialogs","mapStateToProps","isAuth","auth","Component","withRedirectComponent","this","React"],"sourceRoot":""}